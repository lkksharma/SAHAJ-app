{"version":3,"sources":["IframeRenderer.ts"],"names":["React","defaultHTMLElementModels","HTMLContentModel","useHtmlIframeProps","HTMLIframe","IframeRenderer","props","iframeProps","createElement","iframeModel","iframe","extend","contentModel","block","isOpaque"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEEC,wBAFF,EAGEC,gBAHF,QAIO,0BAJP;AAMA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAmC,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AACzE,QAAMC,WAAW,GAAGJ,kBAAkB,CAACG,KAAD,CAAtC;AACA,sBAAON,KAAK,CAACQ,aAAN,CAAoBJ,UAApB,EAAgCG,WAAhC,CAAP;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAME,WAA+D,GAC1ER,wBAAwB,CAACS,MAAzB,CAAgCC,MAAhC,CAAuC;AACrCC,EAAAA,YAAY,EAAEV,gBAAgB,CAACW,KADM;AAErCC,EAAAA,QAAQ,EAAE;AAF2B,CAAvC,CADK;AAMP,eAAeT,cAAf","sourcesContent":["import React from 'react';\nimport {\n  CustomBlockRenderer,\n  defaultHTMLElementModels,\n  HTMLContentModel\n} from 'react-native-render-html';\nimport { HTMLElementModel } from '@native-html/transient-render-engine';\nimport useHtmlIframeProps from './useHtmlIframeProps';\nimport HTMLIframe from './HTMLIframe';\n\n/**\n * The renderer component for the iframe element. This renderer is fully\n * scalable, and will adjust to `contentWidth` and `computeEmbeddedMaxWidth`.\n * It also features `onLinkPress`.\n *\n * @public\n */\nconst IframeRenderer: CustomBlockRenderer = function IframeRenderer(props) {\n  const iframeProps = useHtmlIframeProps(props);\n  return React.createElement(HTMLIframe, iframeProps);\n};\n\n/**\n * The model to attach to custom iframe renderers.\n *\n * @public\n */\nexport const iframeModel: HTMLElementModel<'iframe', HTMLContentModel.block> =\n  defaultHTMLElementModels.iframe.extend({\n    contentModel: HTMLContentModel.block,\n    isOpaque: true\n  });\n\nexport default IframeRenderer;\n"]}