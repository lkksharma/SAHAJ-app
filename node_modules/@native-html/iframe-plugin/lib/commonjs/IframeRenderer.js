"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.iframeModel = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNativeRenderHtml = require("react-native-render-html");

var _useHtmlIframeProps = _interopRequireDefault(require("./useHtmlIframeProps"));

var _HTMLIframe = _interopRequireDefault(require("./HTMLIframe"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The renderer component for the iframe element. This renderer is fully
 * scalable, and will adjust to `contentWidth` and `computeEmbeddedMaxWidth`.
 * It also features `onLinkPress`.
 *
 * @public
 */
const IframeRenderer = function IframeRenderer(props) {
  const iframeProps = (0, _useHtmlIframeProps.default)(props);
  return /*#__PURE__*/_react.default.createElement(_HTMLIframe.default, iframeProps);
};
/**
 * The model to attach to custom iframe renderers.
 *
 * @public
 */


const iframeModel = _reactNativeRenderHtml.defaultHTMLElementModels.iframe.extend({
  contentModel: _reactNativeRenderHtml.HTMLContentModel.block,
  isOpaque: true
});

exports.iframeModel = iframeModel;
var _default = IframeRenderer;
exports.default = _default;
//# sourceMappingURL=IframeRenderer.js.map