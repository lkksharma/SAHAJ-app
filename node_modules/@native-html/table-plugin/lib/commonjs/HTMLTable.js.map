{"version":3,"sources":["HTMLTable.tsx"],"names":["styles","StyleSheet","create","container","flex","overflow","defaultInsets","top","bottom","left","right","DEFAULT_TRANSITION_DURATION","animateNextFrames","duration","LayoutAnimation","configureNext","update","type","Types","easeInEaseOut","tableStylePropTypeSpec","linkColor","PropTypes","string","fontFamily","fontSizePx","number","tdBorderColor","thBorderColor","trOddBackground","trOddColor","trEvenBackground","trEvenColor","rowsBorderWidthPx","columnsBorderWidthPx","outerBorderColor","outerBorderWidthPx","cellPaddingEm","fitContainerWidth","bool","fitContainerHeight","selectableText","thEvenBackground","thEvenColor","thOddBackground","thOddColor","findHeight","computeContainerHeight","computeHeuristicContentHeight","contentHeight","stats","defaultComputeHeuristicContentHeight","tableStats","numOfChars","numOfRows","width","Dimensions","get","charsPerLine","lineHeight","approxNumOfLines","Math","floor","max","defaultComputeContainerHeight","state","useAnimatedAutoheight","animationType","animationDuration","webViewProps","numOfColumns","animatedHeight","Animated","Value","current","autoheightWebshellProps","contentSize","syncState","webshellProps","resetHeightOnViewportWidthChange","containerHeight","height","oldContainerHeightRef","containerStyle","interpolate","inputRange","outputRange","Number","isNaN","undefined","timing","toValue","useNativeDriver","start","useSource","tableStyleSpecs","cssRules","sourceBaseUrl","html","maxScale","injectedHtml","styleSpecs","defaultTableStylesSpecs","tableCssStyle","baseUrl","features","HandleLinkPressFeature","HandleHTMLDimensionsFeature","HTMLTable","WebView","userWebViewProps","style","onLinkPress","htmlAttribs","onDOMLinkPress","event","apply","scalesPageToFit","Platform","select","android","ios","automaticallyAdjustContentInsets","scrollEnabled","contentInset","source","webshellDebug","props","React","createElement","propTypes","isRequired","oneOf","func","elementType","any","shape","object","displayMode","defaultProps","Object","defineProperty","value"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useLayoutEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  StyleSheet,\n  Dimensions,\n  LayoutAnimation,\n  Animated\n} from 'react-native';\nimport {\n  useAutoheight,\n  HandleHTMLDimensionsFeature,\n  HandleLinkPressFeature,\n  MinimalWebViewProps,\n  LinkPressTarget,\n  useWebshell\n} from '@formidable-webview/webshell';\nimport { linkPressTargetToOnDOMLinkPressArgs } from '@native-html/plugins-core';\nimport { cssRulesFromSpecs, defaultTableStylesSpecs } from './css-rules';\nimport {\n  TableStyleSpecs,\n  HTMLTableProps,\n  TableContentHeightState,\n  HTMLTableStats\n} from './types';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // See https://github.com/react-native-community/react-native-webview/issues/101\n    overflow: 'hidden'\n  }\n});\n\nconst defaultInsets = {\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n};\n\nconst DEFAULT_TRANSITION_DURATION = 120;\n\nfunction animateNextFrames(duration?: number) {\n  LayoutAnimation.configureNext({\n    duration: duration || DEFAULT_TRANSITION_DURATION,\n    update: {\n      type: LayoutAnimation.Types.easeInEaseOut\n    }\n  });\n}\n\nconst tableStylePropTypeSpec: Record<keyof TableStyleSpecs, any> = {\n  linkColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSizePx: PropTypes.number,\n  tdBorderColor: PropTypes.string,\n  thBorderColor: PropTypes.string,\n  trOddBackground: PropTypes.string,\n  trOddColor: PropTypes.string,\n  trEvenBackground: PropTypes.string,\n  trEvenColor: PropTypes.string,\n  rowsBorderWidthPx: PropTypes.number,\n  columnsBorderWidthPx: PropTypes.number,\n  outerBorderColor: PropTypes.string,\n  outerBorderWidthPx: PropTypes.number,\n  cellPaddingEm: PropTypes.number,\n  fitContainerWidth: PropTypes.bool,\n  fitContainerHeight: PropTypes.bool,\n  selectableText: PropTypes.bool,\n  thEvenBackground: PropTypes.string,\n  thEvenColor: PropTypes.string,\n  thOddBackground: PropTypes.string,\n  thOddColor: PropTypes.string\n};\n\nfunction findHeight({\n  computeContainerHeight,\n  computeHeuristicContentHeight,\n  contentHeight,\n  ...stats\n}: {\n  computeContainerHeight: (state: TableContentHeightState) => number | null;\n  computeHeuristicContentHeight: (tableStats: HTMLTableStats) => number;\n  contentHeight: number | null;\n} & HTMLTableStats) {\n  if (typeof contentHeight === 'number') {\n    return computeContainerHeight({\n      type: 'accurate',\n      contentHeight: contentHeight\n    });\n  }\n  return computeContainerHeight({\n    type: 'heuristic',\n    contentHeight: computeHeuristicContentHeight(stats)\n  });\n}\n\nfunction defaultComputeHeuristicContentHeight(tableStats: HTMLTableStats) {\n  const { numOfChars, numOfRows } = tableStats;\n  const width = Dimensions.get('window').width;\n  const charsPerLine = (30 * width) / 400;\n  const lineHeight = 20;\n  const approxNumOfLines = Math.floor(numOfChars / charsPerLine);\n  return Math.max(approxNumOfLines, numOfRows) * lineHeight;\n}\n\nfunction defaultComputeContainerHeight(state: TableContentHeightState) {\n  return state.contentHeight;\n}\n\nfunction useAnimatedAutoheight<WVP extends MinimalWebViewProps>({\n  computeContainerHeight,\n  computeHeuristicContentHeight,\n  animationType,\n  animationDuration,\n  webViewProps,\n  numOfChars,\n  numOfColumns,\n  numOfRows\n}: Pick<\n  HTMLTableProps,\n  | 'animationType'\n  | 'animationDuration'\n  | 'numOfChars'\n  | 'numOfColumns'\n  | 'numOfRows'\n> & { webViewProps: any } & Required<\n    Pick<\n      HTMLTableProps,\n      'computeContainerHeight' | 'computeHeuristicContentHeight'\n    >\n  >) {\n  const animatedHeight = useRef(new Animated.Value(0)).current;\n  const { autoheightWebshellProps, contentSize, syncState } =\n    useAutoheight<WVP>({\n      webshellProps: webViewProps as any,\n      resetHeightOnViewportWidthChange: false\n    });\n  const containerHeight = useMemo(\n    () =>\n      findHeight({\n        computeContainerHeight,\n        computeHeuristicContentHeight,\n        contentHeight: syncState === 'synced' ? contentSize.height || 0 : null,\n        numOfChars,\n        numOfColumns,\n        numOfRows\n      }),\n    [\n      computeContainerHeight,\n      computeHeuristicContentHeight,\n      contentSize.height,\n      syncState,\n      numOfChars,\n      numOfColumns,\n      numOfRows\n    ]\n  );\n  const oldContainerHeightRef = useRef<number | null>(containerHeight);\n  const containerStyle: { height: any } = useMemo(\n    () =>\n      animationType === 'animated' && containerHeight !== null\n        ? {\n            height: animatedHeight.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\n                oldContainerHeightRef.current || containerHeight,\n                containerHeight\n              ]\n            })\n          }\n        : {\n            height:\n              !containerHeight || Number.isNaN(containerHeight)\n                ? undefined\n                : containerHeight\n          },\n    [animatedHeight, animationType, containerHeight]\n  );\n  useLayoutEffect(() => {\n    if (oldContainerHeightRef.current !== containerHeight) {\n      oldContainerHeightRef.current = containerHeight;\n      if (animationType === 'animated') {\n        Animated.timing(animatedHeight, {\n          toValue: 1,\n          duration: animationDuration,\n          useNativeDriver: false\n        }).start();\n      } else if (animationType === 'layout') {\n        animateNextFrames(animationDuration);\n      }\n    }\n  }, [containerHeight, animationDuration, animationType, animatedHeight]);\n  return {\n    containerStyle,\n    autoheightWebshellProps\n  };\n}\n\nfunction useSource({\n  tableStyleSpecs,\n  cssRules,\n  sourceBaseUrl,\n  html,\n  maxScale\n}: Pick<\n  HTMLTableProps,\n  'html' | 'cssRules' | 'tableStyleSpecs' | 'sourceBaseUrl' | 'maxScale'\n>) {\n  const injectedHtml = useMemo(() => {\n    const styleSpecs = tableStyleSpecs\n      ? {\n          ...defaultTableStylesSpecs,\n          ...tableStyleSpecs\n        }\n      : defaultTableStylesSpecs;\n    const tableCssStyle =\n      typeof cssRules === 'string' ? cssRules : cssRulesFromSpecs(styleSpecs);\n    return `\n  <!DOCTYPE html>\n  <html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=${Math.max(\n      1,\n      typeof maxScale !== 'number' || Number.isNaN(maxScale) ? 1 : maxScale\n    )}\">\n    <title>Table</title>\n    <style>${tableCssStyle}</style>\n  </head>\n  <body>${html}</body>\n  </html>\n        `;\n  }, [tableStyleSpecs, cssRules, html, maxScale]);\n  return useMemo(\n    () => ({\n      html: injectedHtml,\n      baseUrl: sourceBaseUrl ?? undefined\n    }),\n    [injectedHtml, sourceBaseUrl]\n  );\n}\n\nconst features = [\n  new HandleLinkPressFeature(),\n  new HandleHTMLDimensionsFeature()\n];\n\n/**\n * A component capable of rendering a html string which root tag is a table\n * tag. This component should not be used directly, except with custom\n * renderers.\n *\n * @public\n */\nexport const HTMLTable = function HTMLTable({\n  WebView,\n  tableStyleSpecs,\n  cssRules,\n  html,\n  sourceBaseUrl,\n  animationType,\n  computeHeuristicContentHeight = defaultComputeHeuristicContentHeight,\n  computeContainerHeight = defaultComputeContainerHeight,\n  webViewProps: userWebViewProps,\n  style,\n  onLinkPress,\n  animationDuration,\n  htmlAttribs,\n  maxScale,\n  ...stats\n}: HTMLTableProps) {\n  const onDOMLinkPress = useCallback(\n    (event: LinkPressTarget) =>\n      onLinkPress?.apply(null, linkPressTargetToOnDOMLinkPressArgs(event)),\n    [onLinkPress]\n  );\n  const { autoheightWebshellProps, containerStyle } = useAnimatedAutoheight({\n    ...stats,\n    animationDuration,\n    animationType,\n    computeContainerHeight,\n    computeHeuristicContentHeight,\n    webViewProps: {\n      scalesPageToFit: Platform.select({ android: false, ios: undefined }),\n      automaticallyAdjustContentInsets: false,\n      scrollEnabled: true,\n      contentInset: defaultInsets,\n      ...userWebViewProps,\n      onDOMLinkPress,\n      source: useSource({\n        html,\n        cssRules,\n        sourceBaseUrl,\n        tableStyleSpecs\n      }),\n      webshellDebug: false\n    }\n  });\n  const webViewProps = useWebshell({\n    features,\n    props: autoheightWebshellProps\n  });\n  return (\n    <Animated.View\n      testID=\"html-table-container\"\n      style={[containerStyle, styles.container, style]}>\n      {React.createElement(WebView, webViewProps)}\n    </Animated.View>\n  );\n};\n\nconst propTypes: Record<keyof HTMLTableProps, any> = {\n  animationDuration: PropTypes.number.isRequired,\n  animationType: PropTypes.oneOf(['none', 'animated', 'layout']),\n  computeContainerHeight: PropTypes.func.isRequired,\n  computeHeuristicContentHeight: PropTypes.func.isRequired,\n  html: PropTypes.string.isRequired,\n  numOfChars: PropTypes.number.isRequired,\n  numOfColumns: PropTypes.number.isRequired,\n  numOfRows: PropTypes.number.isRequired,\n  WebView: PropTypes.elementType.isRequired,\n  onLinkPress: PropTypes.func,\n  style: PropTypes.any,\n  tableStyleSpecs: PropTypes.shape(tableStylePropTypeSpec),\n  cssRules: PropTypes.string,\n  webViewProps: PropTypes.object,\n  sourceBaseUrl: PropTypes.string,\n  maxScale: PropTypes.number.isRequired,\n  htmlAttribs: PropTypes.any,\n  displayMode: PropTypes.oneOf(['flex', 'expand'])\n};\n\nconst defaultProps = {\n  animationDuration: DEFAULT_TRANSITION_DURATION,\n  animationType: 'animated',\n  computeHeuristicContentHeight: defaultComputeHeuristicContentHeight,\n  computeContainerHeight: defaultComputeContainerHeight,\n  maxScale: 1\n};\n\nObject.defineProperty(HTMLTable, 'propTypes', {\n  value: propTypes\n});\n\nObject.defineProperty(HTMLTable, 'defaultProps', {\n  value: defaultProps\n});\n"]}